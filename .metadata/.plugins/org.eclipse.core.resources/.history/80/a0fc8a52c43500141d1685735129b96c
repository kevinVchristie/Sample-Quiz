package com.kevin.example.HttpJsonParseQuiz;

import java.util.ArrayList;
import java.util.HashMap;
 
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
 
import android.app.Activity;
import android.app.ListActivity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;
 
public class MainActivity extends Activity {
 
    private ProgressDialog pDialog;
 
    // URL to get contacts JSON
    private static String url = "http://api.androidhive.info/contact/";
 
    // JSON Node names
    private static final String TAG_QUESTIONS = "contacts";
    private static final String TAG_SLNO = "id";
    private static final String TAG_ANS = "email";
    private static final String TAG_OPTIONS_OP1 = "mobile";
    private static final String TAG_OPTIONS_OP2 = "home";
    private static final String TAG_OPTIONS_OP3 = "office";
    private static final String TAG_OPTIONS_OP4 = "address";
    private static final String TAG_OPTIONS_OP5 = "gender";
    private static final String TAG_OPTIONS = "phone";
    //private static final String TAG_OP6 = "home";
    private static final String TAG_QUESTION = "name";
 
    // contacts JSONArray
    JSONArray questions = null;
 
    // Hashmap for ListView
    ArrayList<QuestionObject> questionList ;
 
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        questionList = new ArrayList<QuestionObject>();
        // Calling async task to get json
        new GetQuestions().execute();
    }
    
 
    /**
     * Async task class to get json by making HTTP call
     * */
    private class GetQuestions extends AsyncTask<ArrayList<QuestionObject>, Void, ArrayList<QuestionObject>> {
 
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            // Showing progress dialog
            pDialog = new ProgressDialog(MainActivity.this);
            pDialog.setMessage("Fetching data, Please wait...");
            pDialog.setCancelable(false);
            pDialog.show();
 
        }
 
        @Override
        protected ArrayList<QuestionObject> doInBackground(ArrayList<QuestionObject>... arg) {
            // Creating service handler class instance
            ServiceHandler sh = new ServiceHandler();
            // Making a request to url and getting response
            String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);
            if (jsonStr != null) {
                try {
                    JSONObject jsonObj = new JSONObject(jsonStr);
                     
                    // Getting JSON Array node
                    questions = jsonObj.getJSONArray(TAG_QUESTIONS);
 
                    // looping through All Contacts
                    for (int i = 0; i < questions.length(); i++) {
                        JSONObject c = questions.getJSONObject(i);
                         
                        String id = c.getString(TAG_SLNO);
                        String question = c.getString(TAG_QUESTION);
                        String answer = c.getString(TAG_ANS);
                        String op4 = c.getString(TAG_OPTIONS_OP4);
                        String op5 = c.getString(TAG_OPTIONS_OP5);
 
                        // Phone node is JSON Object
                        JSONObject options = c.getJSONObject(TAG_OPTIONS);
                        String op1 = options.getString(TAG_OPTIONS_OP1);
                        String op2 = options.getString(TAG_OPTIONS_OP2);
                        String op3 = options.getString(TAG_OPTIONS_OP3);
 
                        // tmp hashmap for single contact
                        QuestionObject qn = new QuestionObject(id, question, answer, op1, op2, op3);
                        questionList.add(qn);
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            } else {
                Log.e("ServiceHandler", "Couldn't get any data from the url");
            }
 
            return questionList;
        }
 
        @Override
        protected void onPostExecute(ArrayList<QuestionObject> result) {
            super.onPostExecute(result);
            if (pDialog.isShowing())
                pDialog.dismiss();
            if (result==null)
            	{Toast.makeText(getApplicationContext(), "this is my Toast message!!! =)",
            	Toast.LENGTH_LONG).show();}
            // Dismiss the progress dialog
            else
            	setContentView(R.layout.activity_main);
            
        }
 
    }
 
}